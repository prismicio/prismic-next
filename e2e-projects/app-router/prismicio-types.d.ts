// Code generated by Slice Machine. DO NOT EDIT.

import type * as prismic from "@prismicio/client";

type Simplify<T> = { [KeyType in keyof T]: T[KeyType] };

/** Content for Image Test documents */
interface ImageTestDocumentData {
	/**
	 * Empty field in _Image Test_
	 *
	 * - **Field Type**: Image
	 * - **Placeholder**: _None_
	 * - **API ID Path**: image_test.empty
	 * - **Tab**: Main
	 * - **Documentation**: https://prismic.io/docs/field#image
	 */
	empty: prismic.ImageField<never>;

	/**
	 * Filled field in _Image Test_
	 *
	 * - **Field Type**: Image
	 * - **Placeholder**: _None_
	 * - **API ID Path**: image_test.filled
	 * - **Tab**: Main
	 * - **Documentation**: https://prismic.io/docs/field#image
	 */
	filled: prismic.ImageField<never>;

	/**
	 * With Alt Text field in _Image Test_
	 *
	 * - **Field Type**: Image
	 * - **Placeholder**: _None_
	 * - **API ID Path**: image_test.with_alt_text
	 * - **Tab**: Main
	 * - **Documentation**: https://prismic.io/docs/field#image
	 */
	with_alt_text: prismic.ImageField<never>;

	/**
	 * Without Alt Text field in _Image Test_
	 *
	 * - **Field Type**: Image
	 * - **Placeholder**: _None_
	 * - **API ID Path**: image_test.without_alt_text
	 * - **Tab**: Main
	 * - **Documentation**: https://prismic.io/docs/field#image
	 */
	without_alt_text: prismic.ImageField<never>;

	/**
	 * With Crop field in _Image Test_
	 *
	 * - **Field Type**: Image
	 * - **Placeholder**: _None_
	 * - **API ID Path**: image_test.with_crop
	 * - **Tab**: Main
	 * - **Documentation**: https://prismic.io/docs/field#image
	 */
	with_crop: prismic.ImageField<never>;
}

/**
 * Image Test document from Prismic
 *
 * - **API ID**: `image_test`
 * - **Repeatable**: `false`
 * - **Documentation**: https://prismic.io/docs/custom-types
 *
 * @typeParam Lang - Language API ID of the document.
 */
export type ImageTestDocument<Lang extends string = string> =
	prismic.PrismicDocumentWithoutUID<
		Simplify<ImageTestDocumentData>,
		"image_test",
		Lang
	>;

/** Content for Link Test documents */
interface LinkTestDocumentData {
	/**
	 * Empty field in _Link Test_
	 *
	 * - **Field Type**: Link
	 * - **Placeholder**: _None_
	 * - **API ID Path**: link_test.empty
	 * - **Tab**: Main
	 * - **Documentation**: https://prismic.io/docs/field#link-content-relationship
	 */
	empty: prismic.LinkField;

	/**
	 * Internal Web field in _Link Test_
	 *
	 * - **Field Type**: Link
	 * - **Placeholder**: _None_
	 * - **API ID Path**: link_test.internal_web
	 * - **Tab**: Main
	 * - **Documentation**: https://prismic.io/docs/field#link-content-relationship
	 */
	internal_web: prismic.LinkField;

	/**
	 * External Web field in _Link Test_
	 *
	 * - **Field Type**: Link
	 * - **Placeholder**: _None_
	 * - **API ID Path**: link_test.external_web
	 * - **Tab**: Main
	 * - **Documentation**: https://prismic.io/docs/field#link-content-relationship
	 */
	external_web: prismic.LinkField;

	/**
	 * External Web With Target field in _Link Test_
	 *
	 * - **Field Type**: Link
	 * - **Placeholder**: _None_
	 * - **API ID Path**: link_test.external_web_with_target
	 * - **Tab**: Main
	 * - **Documentation**: https://prismic.io/docs/field#link-content-relationship
	 */
	external_web_with_target: prismic.LinkField;

	/**
	 * Document field in _Link Test_
	 *
	 * - **Field Type**: Link
	 * - **Placeholder**: _None_
	 * - **API ID Path**: link_test.document
	 * - **Tab**: Main
	 * - **Documentation**: https://prismic.io/docs/field#link-content-relationship
	 */
	document: prismic.LinkField;

	/**
	 * Media field in _Link Test_
	 *
	 * - **Field Type**: Link
	 * - **Placeholder**: _None_
	 * - **API ID Path**: link_test.media
	 * - **Tab**: Main
	 * - **Documentation**: https://prismic.io/docs/field#link-content-relationship
	 */
	media: prismic.LinkField;

	/**
	 * With Text field in _Link Test_
	 *
	 * - **Field Type**: Link
	 * - **Placeholder**: _None_
	 * - **API ID Path**: link_test.with_text
	 * - **Tab**: Main
	 * - **Documentation**: https://prismic.io/docs/field#link-content-relationship
	 */
	with_text: prismic.LinkField;
}

/**
 * Link Test document from Prismic
 *
 * - **API ID**: `link_test`
 * - **Repeatable**: `false`
 * - **Documentation**: https://prismic.io/docs/custom-types
 *
 * @typeParam Lang - Language API ID of the document.
 */
export type LinkTestDocument<Lang extends string = string> =
	prismic.PrismicDocumentWithoutUID<
		Simplify<LinkTestDocumentData>,
		"link_test",
		Lang
	>;

type PageDocumentDataSlicesSlice = never;

/** Content for Page documents */
interface PageDocumentData {
	/**
	 * Payload field in _Page_
	 *
	 * - **Field Type**: Text
	 * - **Placeholder**: _None_
	 * - **API ID Path**: page.payload
	 * - **Tab**: Main
	 * - **Documentation**: https://prismic.io/docs/field#key-text
	 */
	payload: prismic.KeyTextField;

	/**
	 * `slices` field in _Page_
	 *
	 * - **Field Type**: Slice Zone
	 * - **Placeholder**: _None_
	 * - **API ID Path**: page.slices[]
	 * - **Tab**: Main
	 * - **Documentation**: https://prismic.io/docs/field#slices
	 */
	slices: prismic.SliceZone<PageDocumentDataSlicesSlice>;
}

/**
 * Page document from Prismic
 *
 * - **API ID**: `page`
 * - **Repeatable**: `true`
 * - **Documentation**: https://prismic.io/docs/custom-types
 *
 * @typeParam Lang - Language API ID of the document.
 */
export type PageDocument<Lang extends string = string> =
	prismic.PrismicDocumentWithUID<Simplify<PageDocumentData>, "page", Lang>;

export type AllDocumentTypes =
	| ImageTestDocument
	| LinkTestDocument
	| PageDocument;

declare module "@prismicio/client" {
	interface CreateClient {
		(
			repositoryNameOrEndpoint: string,
			options?: prismic.ClientConfig,
		): prismic.Client<AllDocumentTypes>;
	}

	interface CreateWriteClient {
		(
			repositoryNameOrEndpoint: string,
			options: prismic.WriteClientConfig,
		): prismic.WriteClient<AllDocumentTypes>;
	}

	interface CreateMigration {
		(): prismic.Migration<AllDocumentTypes>;
	}

	namespace Content {
		export type {
			ImageTestDocument,
			ImageTestDocumentData,
			LinkTestDocument,
			LinkTestDocumentData,
			PageDocument,
			PageDocumentData,
			PageDocumentDataSlicesSlice,
			AllDocumentTypes,
		};
	}
}
